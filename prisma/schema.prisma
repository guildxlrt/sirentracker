generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  password  String
  Artist    Artist[]
  Fan       Fan[]
  Order     Order[]
}

model Artist {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  user_credential Int
  name            String
  bio             String?
  avatarUrl       String?
  members         String[]
  genres          String[]
  user            User      @relation(fields: [user_credential], references: [id], onDelete: Cascade)
  Release         Release[]
  Song            Song[]
}

model Fan {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  user_credential Int
  name            String
  bio             String?
  avatarUrl       String?
  user            User     @relation(fields: [user_credential], references: [id], onDelete: Cascade)
}

model Release {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  artist_id   Int
  title       String
  releaseType String
  descript    String?
  price       Int?
  genres      String[]
  songs       Int[]
  coverUrl    String?
  Order       Order[]
  artist      Artist   @relation(fields: [artist_id], references: [id], onDelete: Cascade)
  Song        Song[]
}

model Song {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  artist_id  Int
  release_id Int
  title      String
  audioUrl   String
  featuring  Int[]
  lyrics     String?
  artist     Artist   @relation(fields: [artist_id], references: [id], onDelete: Cascade)
  release    Release  @relation(fields: [release_id], references: [id], onDelete: Cascade)
}

model Order {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  release_id Int
  user_id    Int
  amount     Int
  release    Release  @relation(fields: [release_id], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
